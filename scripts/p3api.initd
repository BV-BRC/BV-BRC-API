#!/bin/bash
#
# chkconfig: 345 80 20
# description: {{ item.name }} 
# processname: {{ item.name }} 
# pidfile: /var/run/polyomic/{{ item.name }}.pid
# logfile: /var/log/polyomic/{{ item.name }}.log
#
 
# Source function library.
. /etc/init.d/functions
 
NAME=p3api-server
P3_HOME=/opt/p3api
SOURCE_DIR=$P3_HOME
SOURCE_FILE=bin/$NAME
user=p3api
pidfile=$P3_HOME/run/p3api.log
logfile=$P3_HOME/log/p3api.log
forever_dir=/var/run/p3api

 
node=node
forever="sudo -u $user forever"
sed=sed
 
#export PATH=$PATH:/home/node/local/node/bin
#export NODE_PATH=$NODE_PATH:/home/node/local/node/lib/node_modules
 
start() {
  echo "Starting $NAME node instance: "
 
  if [ "$foreverid" == "" ]; then
    # Create the log and pid files, making sure that 
    # the target use has access to them
    touch $logfile
    chown $user $logfile
 
    touch $pidfile
    chown $user $pidfile
 
    # Launch the application
    daemon --user=root \
      $forever start -p $forever_dir --pidFile $pidfile -l $logfile \
      -a -d $SOURCE_DIR/$SOURCE_FILE > /dev/null 
    RETVAL=$?
  else
    echo "Instance already running"
    RETVAL=0
  fi
}
 
stop() {
  echo -n "Shutting down $NAME node instance : "
  if [ "$foreverid" != "" ]; then
    echo Using Forever Id $foreverid
    $forever stop -p $forever_dir $foreverid
  else
    echo "Instance is not running";
  fi
  RETVAL=$?
}
 
if [ -f $pidfile ]; then
  read pid < $pidfile
else
  pid=""
fi
 
if [ "$pid" != "" ]; then
  # Gnarly sed usage to obtain the foreverid.
  $forever columns set pid > /dev/null
  foreverid=`$forever list -p $forever_dir | $sed -n "/$pid/p" | $sed "s/.*\[\([0-9]\+\)\].*\s$pid\.*/\1/g"`
  $forever columns reset > /dev/null
#  sed1="/$pid/p"
#  sed2="s/.*\[\([0-9]\+\)\].*\s$pid\.*/\1/g"
#  sed2="s/.*
#  foreverid=`$forever list -p $forever_dir | $sed -n $sed1 | $sed $sed2`

else
  foreverid=""
fi
 
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status -p ${pidfile}
    ;;
  *)
    echo "Usage:  {start|stop|status}"
    exit 1
    ;;
esac
exit $RETVAL

